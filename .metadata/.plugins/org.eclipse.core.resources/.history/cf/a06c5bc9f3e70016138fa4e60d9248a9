package operations;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

public class ManageEmployee {
	private static SessionFactory factory;
	
	public static void main(String[] args) {
		
		try{
			
			factory=new Configuration().configure("hibernate.cfg.xml").buildSessionFactory();
			
		}
		
catch(Exception e){
	e.printStackTrace();
	
}
	}
		public Integer addEmployee(int id,String lastname, String firstname, int balance){
		      Session session = factory.openSession();
		      Transaction tx = null;
		      Integer employeeID = null;
		      try{
		         tx = session.beginTransaction();
		         Account account = new Account(id,lastname, firstname, balance);
		         employeeID = (Integer) session.save(account); 
		         tx.commit();


		      }
catch(Exception e){
	if(tx!=null)tx.rollback();
	
	e.printStackTrace();
	
}finally{
	
	session.close();
	
}
			return employeeID;	
		}		
			
			public void updateEmployee(Integer employeeID,int balance){
				
		Session session=factory.openSession();
		
		Transaction tx=null;
try{
	
	tx=session.beginTransaction();
	
Account account=session.get(Account.class, employeeID);

account.setBalance(balance);

session.update(account);
tx.commit();

}catch(Exception e){
	if(tx!=null) tx.rollback();
	e.printStackTrace();
}finally{
	session.close();
}

			}	
public void deleteEmployee(Integer employeeID){
	
	Session session=factory.openSession();
	Transaction tx=null;
	
	try{
		tx=session.beginTransaction();
		
		Account account=session.get(Account.class, employeeID);
		
		session.delete(account);
		tx.commit();
	}catch(Exception e){
		
		if(tx!=null)tx.rollback();
		e.printStackTrace();
	}finally{
		session.close();
		
		}
		
		
		
		
		
		
		
	}
	
	
	
	
}


			
}				





